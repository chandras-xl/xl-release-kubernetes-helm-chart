{{$XLR_ADMIN_PASS := .Values.AdminPassword | default "admin"}}
{{$XLR_DB_NAME := .Values.UseExistingDB.XLR_DB_NAME | default "xlr-db"}}
{{$XLR_DB_USER := .Values.UseExistingDB.XLR_REPORT_DB_USER | default "xlr"}}
{{$XLR_DB_PASS := .Values.UseExistingDB.XLR_REPORT_DB_PASS | default "xlr"}}
{{$XLR_REPORT_DB_NAME := .Values.UseExistingDB.XLR_REPORT_DB_NAME | default "xlr-report-db"}}
{{$XLR_REPORT_DB_USER := .Values.UseExistingDB.XLR_REPORT_DB_USER | default "xlr-report"}}
{{$XLR_REPORT_DB_PASS := .Values.UseExistingDB.XLR_REPORT_DB_PASS | default "xlr-report"}}
{{- if not .Values.UseExistingDB.Enabled }}
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ template "xl-release.fullname" . }}-postgresql
  labels:
    app: {{ template "xl-release.name" . }}
    chart: {{ template "xl-release.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  init-sql.sh: |-
    #!/bin/sh
    set -e

    if psql -v ON_ERROR_STOP=1 -h "$POSTGRES_HOST"  --username "$POSTGRES_USER" -lqt | cut -d \| -f 1 | grep -qw {{$XLR_DB_NAME}}; then
       echo "database {{$XLR_DB_NAME}} exists"
    else
        psql -v ON_ERROR_STOP=1 -h "$POSTGRES_HOST" --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
            CREATE USER "{{$XLR_DB_USER}}" WITH ENCRYPTED PASSWORD '{{$XLR_DB_PASS}}';
            CREATE DATABASE "{{$XLR_DB_NAME}}";
            GRANT ALL PRIVILEGES ON DATABASE "{{$XLR_DB_NAME}}" TO "{{$XLR_DB_USER}}";
    EOSQL
       echo "database {{$XLR_DB_NAME}} created"
    fi
    if psql -v ON_ERROR_STOP=1 -h "$POSTGRES_HOST"  --username "$POSTGRES_USER" -lqt | cut -d \| -f 1 | grep -qw {{$XLR_REPORT_DB_NAME}}; then
       echo "database {{$XLR_REPORT_DB_NAME}} exists"
    else
        psql -v ON_ERROR_STOP=1 -h "$POSTGRES_HOST" --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
            CREATE USER "{{$XLR_REPORT_DB_USER}}" WITH ENCRYPTED PASSWORD '{{$XLR_REPORT_DB_PASS}}';
            CREATE DATABASE "{{$XLR_REPORT_DB_NAME}}";
            GRANT ALL PRIVILEGES ON DATABASE "{{$XLR_REPORT_DB_NAME}}" TO "{{$XLR_REPORT_DB_USER}}";
    EOSQL
       echo "database {{$XLR_REPORT_DB_NAME}} created"
    fi
---
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "xl-release.fullname" . }}
  labels:
    app: {{ template "xl-release.name" . }}
    chart: {{ template "xl-release.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "xl-release.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "xl-release.name" . }}
        release: {{ .Release.Name }}
    spec:
      {{- if not .Values.UseExistingDB.Enabled }}
      initContainers:
        - name: wait-for-db
          image: xebialabs/tiny-tools
          command:
            - sh
            - -c
            - >
              until nc -z -w 2 $POSTGRES_SVC $POSTGRES_PORT && echo database ok; do
                sleep 2;
              done;
          env:
           - name: POSTGRES_SVC
             value: {{ template "xl-release.fullname" . }}-postgresql
           - name: POSTGRES_PORT
             value: "5432"
        - name: create-db
          image: xebialabs/tiny-tools
          imagePullPolicy: IfNotPresent
          command:
            - '/bin/sh'
            - '/tmp/init-sql.sh'
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_HOST
              value: {{ template "xl-release.fullname" . }}-postgresql
          volumeMounts:
            - name: postgresql-init-sql-xlr
              subPath: init-sql.sh
              mountPath: /tmp/init-sql.sh
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.ImageRepository }}:{{ .Values.ImageTag }}"
          imagePullPolicy: "{{ .Values.ImagePullPolicy }}"
          ports:
            - name: xlr-http
              containerPort: 5516
              protocol: TCP
          volumeMounts:
            - name: reports-dir
              mountPath: /opt/xebialabs/xl-release-server/reports
{{- if .Values.HealthProbes }}
          livenessProbe:
            httpGet:
              path: /
              port: xlr-http
            initialDelaySeconds: {{ .Values.HealthProbesLivenessTimeout }}
            periodSeconds: {{ .Values.HealthPeriodScans }}
            failureThreshold: {{ .Values.HealthProbeFailureThreshold }}
          readinessProbe:
            httpGet:
              path: /
              port: xlr-http
            initialDelaySeconds: {{ .Values.HealthProbesReadinessTimeout }}
            periodSeconds: {{ .Values.HealthPeriodScans }}
            failureThreshold: {{ .Values.HealthProbeFailureThreshold }}
{{- end }}
          env:
            - name: ADMIN_PASSWORD
              value: {{$XLR_ADMIN_PASS}}
            - name: XL_LICENSE
              value: {{ .Values.xlrLicense }}
            - name: XLR_DEVELOPMENT_MODE
              value: "{{ .Values.xlrDevelopmentMode }}"
            - name: XL_DB_URL
              {{- if not .Values.UseExistingDB.Enabled }}
              value: jdbc:postgresql://{{ template "xl-release.fullname" . }}-postgresql:5432/{{$XLR_DB_NAME}}
              {{- else }}
              value: {{ .Values.UseExistingDB.XLR_DB_URL }}
              {{- end }}
            - name: XL_DB_USERNAME
              value: {{$XLR_DB_USER}}
            - name: XL_DB_PASSWORD
              value: "{{$XLR_DB_PASS}}"
            - name: XL_REPORT_DB_URL
              {{- if not .Values.UseExistingDB.Enabled }}
              value: jdbc:postgresql://{{ template "xl-release.fullname" . }}-postgresql:5432/{{$XLR_REPORT_DB_NAME}}
              {{- else }}
              value: {{ .Values.UseExistingDB.XL_REPORT_DB_URL }}
              {{- end }}
            - name: XL_REPORT_DB_USERNAME
              value: {{$XLR_REPORT_DB_USER}}
            - name: XL_REPORT_DB_PASSWORD
              value: "{{$XLR_REPORT_DB_PASS}}"
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
        {{- if not .Values.UseExistingDB.Enabled }}
        - name: postgresql-init-sql-xlr
          configMap:
            name: {{ template "xl-release.fullname" . }}-postgresql
            defaultMode: 0777
        {{- end }}
        - name: reports-dir
          persistentVolumeClaim:
            claimName: {{ template "xl-release.fullname" . }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
